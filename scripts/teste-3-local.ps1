# ========================================
# TESTE 3: RODAR P√ÅGINA DE TESTE LOCAL
# ========================================

Write-Host "`n========================================" -ForegroundColor Cyan
Write-Host "TESTE 3: P√°gina de Teste Isolada" -ForegroundColor Cyan
Write-Host "========================================`n" -ForegroundColor Cyan

$PROJECT_PATH = "c:\Users\up739088\Desktop\aplica√ßoes,sites,etc\hpo_translation\plataforma-raras-cpl"

Write-Host "üì¶ Verificando se TestTranslatePage.tsx existe..." -ForegroundColor Yellow

if (Test-Path "$PROJECT_PATH\src\TestTranslatePage.tsx") {
    Write-Host "   ‚úÖ Arquivo encontrado!`n" -ForegroundColor Green
} else {
    Write-Host "   ‚ùå Arquivo N√ÉO encontrado!" -ForegroundColor Red
    Write-Host "   Execute o script de diagn√≥stico completo primeiro.`n" -ForegroundColor Yellow
    exit
}

Write-Host "üîß INSTRU√á√ïES MANUAIS:" -ForegroundColor Yellow
Write-Host "`n1. Abra o arquivo:" -ForegroundColor Cyan
Write-Host "   plataforma-raras-cpl\src\App.tsx" -ForegroundColor Gray

Write-Host "`n2. Adicione o import:" -ForegroundColor Cyan
Write-Host "   import TestTranslatePage from './TestTranslatePage';" -ForegroundColor Gray

Write-Host "`n3. Adicione a rota (dentro de <Routes>):" -ForegroundColor Cyan
Write-Host "   <Route path='/test' element={<TestTranslatePage />} />" -ForegroundColor Gray

Write-Host "`n4. Salve o arquivo`n" -ForegroundColor Cyan

$addRoute = Read-Host "Deseja que eu adicione a rota automaticamente? (S/N)"

if ($addRoute -eq "S" -or $addRoute -eq "s") {
    Write-Host "`nüìù Adicionando rota ao App.tsx..." -ForegroundColor Yellow
    
    # L√™ o App.tsx
    $appContent = Get-Content "$PROJECT_PATH\src\App.tsx" -Raw
    
    # Adiciona import se n√£o existir
    if ($appContent -notmatch "TestTranslatePage") {
        $appContent = $appContent -replace "(import.*from\s+['\"]react-router-dom['\"];)", "`$1`nimport TestTranslatePage from './TestTranslatePage';"
        Write-Host "   ‚úÖ Import adicionado" -ForegroundColor Green
    } else {
        Write-Host "   ‚ÑπÔ∏è  Import j√° existe" -ForegroundColor Gray
    }
    
    # Adiciona rota se n√£o existir
    if ($appContent -notmatch "/test") {
        $appContent = $appContent -replace "(<Routes>)", "`$1`n          <Route path='/test' element={<TestTranslatePage />} />"
        Write-Host "   ‚úÖ Rota adicionada" -ForegroundColor Green
    } else {
        Write-Host "   ‚ÑπÔ∏è  Rota j√° existe" -ForegroundColor Gray
    }
    
    # Salva arquivo
    Set-Content "$PROJECT_PATH\src\App.tsx" -Value $appContent
    Write-Host "`n‚úÖ App.tsx atualizado!`n" -ForegroundColor Green
}

Write-Host "`nüöÄ Iniciando servidor de desenvolvimento..." -ForegroundColor Yellow
Write-Host "   URL de teste: http://localhost:5173/test`n" -ForegroundColor Cyan

Write-Host "‚ö° TESTES A FAZER:" -ForegroundColor Yellow
Write-Host "   1. Scroll r√°pido na lista de termos" -ForegroundColor Gray
Write-Host "   2. Clicar em v√°rios termos seguidos" -ForegroundColor Gray
Write-Host "   3. Digitar no formul√°rio" -ForegroundColor Gray
Write-Host "   4. Abrir DevTools (F12) ‚Üí Performance ‚Üí Gravar durante scroll" -ForegroundColor Gray
Write-Host "   5. Verificar se trava ou n√£o`n" -ForegroundColor Gray

$runDev = Read-Host "Iniciar servidor agora? (S/N)"

if ($runDev -eq "S" -or $runDev -eq "s") {
    Set-Location $PROJECT_PATH
    Write-Host "`nüöÄ Rodando npm run dev...`n" -ForegroundColor Green
    npm run dev
} else {
    Write-Host "`nüìù Para rodar manualmente:" -ForegroundColor Yellow
    Write-Host "   cd plataforma-raras-cpl" -ForegroundColor Gray
    Write-Host "   npm run dev`n" -ForegroundColor Gray
}
